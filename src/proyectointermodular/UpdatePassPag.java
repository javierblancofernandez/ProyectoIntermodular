/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyectointermodular;

import dao.BaseDeDatosUsuarios;
import encriptadoSym.EncriptadoCipher;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import pojos.Usuario;
import pojos.UsuarioPassword;

/**
 *
 * @author javib
 */
public class UpdatePassPag extends javax.swing.JInternalFrame {
    BaseDeDatosUsuarios base=new BaseDeDatosUsuarios();
    DefaultTableModel modeloTabla = new DefaultTableModel();
    Usuario usuarioSeleccionado =null;
    //String userPag = null;
    String userSesion = null;
    Integer userSesionId = null;
    EncriptadoCipher desencript = new EncriptadoCipher();
    //Para AES 16 bits
    String pass = "1234567812345678";
    /**
     * Creates new form UpdatePassPag
     */
    public UpdatePassPag() {
        initComponents();
        cargarColumnasTablas();
        cargarModeloTabla();
    }
    
    public UpdatePassPag(Integer userSesion) {
        initComponents();
        this.userSesionId = userSesion;
        cargarColumnasTablas();
        cargarModeloTabla();
        
    }
    
    private void cargarColumnasTablas(){
        modeloTabla.addColumn("id");
        modeloTabla.addColumn("Nombre Pagina");
        modeloTabla.addColumn("URL Pagina");
        modeloTabla.addColumn("Nombre Usuario");
        modeloTabla.addColumn("Contraseña");
    }
    private void cargarModeloTabla() {

        System.out.println("EStoy en cargar modelo tabla"+this.userSesionId);
        limpiarTabla();
        
        ArrayList <Usuario> listaUsuarios=base.obtenerUsuariosPagina(this.userSesionId);
        int numeroUsuarios= listaUsuarios.size();
        System.out.println("EStoy en cargar modelo tabla"+numeroUsuarios);
        modeloTabla.setNumRows(numeroUsuarios);
        
        for (int i = 0; i < listaUsuarios.size(); i++) {
            Usuario user = listaUsuarios.get(i);
            Integer clave = user.getIdUser();
            String nombrepagina = user.getNombre();
            String url = user.getUrl();
            String useremail = user.getNombreUser();
            String password = user.getPassword();
            //String password = EncriptadoCipher.desencriptar(user.getPassword(), pass);
            modeloTabla.setValueAt(clave, i, 0);
            modeloTabla.setValueAt(nombrepagina, i, 1);
            modeloTabla.setValueAt(url, i, 2);
            modeloTabla.setValueAt(useremail, i, 3);
            //modeloTabla.setValueAt(precioVenta, i, 4);
            modeloTabla.setValueAt(password, i, 4);
        }

    }
    
    private void limpiarTabla() {
        int numFilas= modeloTabla.getRowCount();
        System.out.println("nume fillas : "+numFilas);
        if (numFilas>0) {
            for (int i = numFilas-1; i >=0 ; i--) {
            modeloTabla.removeRow(i);
            
            }
        }    

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneUsuariosPassword = new javax.swing.JScrollPane();
        tablaUsuariosPassword = new javax.swing.JTable();
        tablaUsuariosPassword.getSelectionModel().addListSelectionListener(
            new ListSelectionListener(){
                public void valueChanged(ListSelectionEvent event){
                    if (! event.getValueIsAdjusting() && tablaUsuariosPassword.getSelectedRow()>=0){
                        int filaSeleccionada=tablaUsuariosPassword.getSelectedRow();
                        System.out.println("filaSeleccionada: "+ filaSeleccionada);
                        //UsuarioPassword usuario=(UsuarioPassword)modeloTabla.getValueAt(filaSeleccionada, 1);
                        System.out.println("indice: "+ modeloTabla.getValueAt(filaSeleccionada, 0));
                        System.out.println("nombrepagina: "+ modeloTabla.getValueAt(filaSeleccionada, 1));
                        IdUserContraseñajLabel.setText(String.valueOf(modeloTabla.getValueAt(filaSeleccionada, 0)));
                        nombrePagjTextField.setText(String.valueOf(modeloTabla.getValueAt(filaSeleccionada, 1)));
                        urlPaginajTextField.setText(String.valueOf(modeloTabla.getValueAt(filaSeleccionada, 2)));
                        nombreUserPagjTextField.setText(String.valueOf(modeloTabla.getValueAt(filaSeleccionada, 3)));
                        //passwordPaginajTextField.setText(String.valueOf(modeloTabla.getValueAt(filaSeleccionada, 4)));
                        passwordPaginajTextField.setText(EncriptadoCipher.desencriptar(String.valueOf(modeloTabla.getValueAt(filaSeleccionada, 4)),pass));
                        System.out.println("url: "+ modeloTabla.getValueAt(filaSeleccionada, 2));
                        System.out.println("nombreusuario: "+ modeloTabla.getValueAt(filaSeleccionada, 3));
                        System.out.println("password: "+ modeloTabla.getValueAt(filaSeleccionada,4));
                        /*campoNombreProducto.setText(producto.getNombProducto());
                        campoClaveProducto.setText(producto.getIdProducto());
                        campoExistenciaProducto.setText(String.valueOf(producto.getStockProducto()));
                        productoSeleccionado= producto;*/
                        //desplegar la foto del producto
                        //desplegarFoto(producto);
                    }
                }

            }
        );
        borrarPasswordjButton = new javax.swing.JButton();
        buscarPaginajTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nombrePagjTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        urlPaginajTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nombreUserPagjTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        passwordPaginajTextField = new javax.swing.JTextField();
        IdUserContraseñajLabel = new javax.swing.JLabel();
        ActualizarRegistrojButton = new javax.swing.JButton();

        setTitle("Id");

        tablaUsuariosPassword.setModel(modeloTabla);
        jScrollPaneUsuariosPassword.setViewportView(tablaUsuariosPassword);

        borrarPasswordjButton.setText("Borrar Registro");
        borrarPasswordjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarPasswordjButtonActionPerformed(evt);
            }
        });

        buscarPaginajTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarPaginajTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Busqueda Pagina");

        jLabel2.setText("Id");

        jLabel4.setText("Nombre Página");

        jLabel5.setText("Url Página");

        jLabel6.setText("Nombre Usuario");

        jLabel7.setText("Password");

        ActualizarRegistrojButton.setText("Actualizar Registro");
        ActualizarRegistrojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarRegistrojButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneUsuariosPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE)
                        .addComponent(borrarPasswordjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscarPaginajTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ActualizarRegistrojButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(100, 100, 100)
                                .addComponent(passwordPaginajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(urlPaginajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(67, 67, 67)
                                    .addComponent(nombrePagjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nombreUserPagjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(IdUserContraseñajLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(IdUserContraseñajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombrePagjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(urlPaginajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nombreUserPagjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(passwordPaginajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ActualizarRegistrojButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscarPaginajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneUsuariosPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(borrarPasswordjButton)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrarPasswordjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarPasswordjButtonActionPerformed
        // TODO add your handling code here:
        boolean borrado;
        Usuario user = new Usuario();
        user.setIdUser(Integer.valueOf(IdUserContraseñajLabel.getText()));
        user.setNombre(nombrePagjTextField.getText());
        user.setUrl(urlPaginajTextField.getText());
        user.setNombreUser(nombreUserPagjTextField.getText());
        user.setPassword(passwordPaginajTextField.getText());
        //Integer opcion = JOptionPane.showConfirmDialog(rootPane, "Se va a borrar permanentemente el usuario,¿esta seguro?","Borrar Mensaje",0,JOptionPane.INFORMATION_MESSAGE);
        Integer opcion = JOptionPane.showOptionDialog(rootPane, "Se va a borrar permanentemente el usuario,¿esta seguro?","Borrar Mensaje",0,JOptionPane.INFORMATION_MESSAGE,null,new Object[] { "Si", "No"},"Si");
        System.out.println("opcion: "+opcion);
            if(opcion == 0){
                borrado = base.borrarUsuarioPagina(user);
                if(borrado){
                    JOptionPane.showMessageDialog(rootPane, "El usuario "+ user.getNombre()+" se ha borrado correctamente","",JOptionPane.INFORMATION_MESSAGE);
                    cargarModeloTabla();
                }else{
                JOptionPane.showMessageDialog(rootPane, "El usuario no se ha borrado correctamente. Cierre y pongase en contacto con su Administrador","",JOptionPane.ERROR_MESSAGE);
                }
            }
    }//GEN-LAST:event_borrarPasswordjButtonActionPerformed

    private void buscarPaginajTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarPaginajTextFieldActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        String cadenaBusqueda = buscarPaginajTextField.getText();
        ArrayList <Usuario> listaUsuarios=base.obtenerUsuarioPorCriterio(cadenaBusqueda,this.userSesionId);
        int numeroUsuarios=listaUsuarios.size();
        modeloTabla.setNumRows(numeroUsuarios);
        for (int i = 0; i < numeroUsuarios; i++) {
            Usuario usuario = listaUsuarios.get(i);
            String clave=String.valueOf(usuario.getIdUser());
            String nombre=usuario.getNombre();
            String url = usuario.getUrl();
            String nombreUser=usuario.getNombreUser();
            String passwordUser = usuario.getPassword();
            
            modeloTabla.setValueAt(clave, i, 0);
            modeloTabla.setValueAt(nombre, i, 1);
            modeloTabla.setValueAt(url, i, 2);
            modeloTabla.setValueAt(nombreUser, i, 3);
            modeloTabla.setValueAt(passwordUser, i, 4);
            
        }
        if(numeroUsuarios==0){
            cargarModeloTabla();
        }
    }//GEN-LAST:event_buscarPaginajTextFieldActionPerformed

    private void ActualizarRegistrojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarRegistrojButtonActionPerformed
        // TODO add your handling code here:
        Usuario user = new Usuario();
        user.setIdUser(Integer.valueOf(IdUserContraseñajLabel.getText()));
        user.setNombre(nombrePagjTextField.getText());
        user.setUrl(urlPaginajTextField.getText());
        user.setNombreUser(nombreUserPagjTextField.getText());
        String password = EncriptadoCipher.encriptar(passwordPaginajTextField.getText(), pass);
        user.setPassword(password);
        boolean actualizado = base.updateUsuario(user,this.userSesionId);
        if(actualizado){
            JOptionPane.showMessageDialog(rootPane, "El registro de la pagina y password se ha actualizado correctamente","",JOptionPane.INFORMATION_MESSAGE);
            cargarModeloTabla();
        }else{
            JOptionPane.showMessageDialog(rootPane, "El registro de la pagina y password no se ha actualizado correctamente. Cierre y pongase en contacto con su Administrador","",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ActualizarRegistrojButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarRegistrojButton;
    private javax.swing.JLabel IdUserContraseñajLabel;
    private javax.swing.JButton borrarPasswordjButton;
    private javax.swing.JTextField buscarPaginajTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPaneUsuariosPassword;
    private javax.swing.JTextField nombrePagjTextField;
    private javax.swing.JTextField nombreUserPagjTextField;
    private javax.swing.JTextField passwordPaginajTextField;
    private javax.swing.JTable tablaUsuariosPassword;
    private javax.swing.JTextField urlPaginajTextField;
    // End of variables declaration//GEN-END:variables
}
